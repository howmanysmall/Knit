"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"About","href":"/Knit/docs/intro","docId":"intro"},{"type":"link","label":"Getting Started","href":"/Knit/docs/gettingstarted","docId":"gettingstarted"},{"type":"link","label":"Services","href":"/Knit/docs/services","docId":"services"},{"type":"link","label":"Controllers","href":"/Knit/docs/controllers","docId":"controllers"},{"type":"link","label":"Util","href":"/Knit/docs/util","docId":"util"},{"type":"link","label":"Execution Model","href":"/Knit/docs/executionmodel","docId":"executionmodel"},{"type":"link","label":"Examples","href":"/Knit/docs/examples","docId":"examples"},{"type":"link","label":"Middleware","href":"/Knit/docs/middleware","docId":"middleware"},{"type":"link","label":"Intellisense","href":"/Knit/docs/intellisense","docId":"intellisense"},{"type":"link","label":"VS Code Snippets","href":"/Knit/docs/vscodesnippets","docId":"vscodesnippets"}]},"docs":{"controllers":{"id":"controllers","title":"Controllers","description":"Controllers Defined","sidebar":"defaultSidebar"},"examples":{"id":"examples","title":"Examples","description":"Start All Services","sidebar":"defaultSidebar"},"executionmodel":{"id":"executionmodel","title":"Execution Model","description":"Lifecycle","sidebar":"defaultSidebar"},"gettingstarted":{"id":"gettingstarted","title":"Getting Started","description":"Tutorial Videos","sidebar":"defaultSidebar"},"intellisense":{"id":"intellisense","title":"Intellisense","description":"Knit was created before intellisense was introduced to Roblox. Unfortunately, due to the nature of how Knit is written, Knit does not benefit much from Roblox\'s intellisense. While the performance and stability of Knit are top-notch, the lack of intellisense can cause unnecessary strain on developers.","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"About","description":"A lightweight framework that simplifies communication between core parts of your Roblox experience and seamlessly bridges the gap between the server and the client.","sidebar":"defaultSidebar"},"middleware":{"id":"middleware","title":"Middleware","description":"Knit\'s networking layer uses the Comm module internally, which allows for middleware to be introduced at both the inbound and outbound level. For example, if a service had a client method called GetMoney(player), and the client called that method, your service would then fire that function. If there is any inbound middleware on the server, the inbound middleware would fire before GetMoney is fired. And the outbound middleware would fire after GetMoney is fired.","sidebar":"defaultSidebar"},"services":{"id":"services","title":"Services","description":"Services Defined","sidebar":"defaultSidebar"},"util":{"id":"util","title":"Util","description":"Knit via Wally","sidebar":"defaultSidebar"},"vscodesnippets":{"id":"vscodesnippets","title":"VS Code Snippets","description":"Being able to quickly create services, controllers, or other Knit-related items is very useful when using Knit as a framework. To keep Knit lightweight, there are no required extensions or plugins. Instead, below are some VS Code snippets that can be used to speed up development.","sidebar":"defaultSidebar"}}}')}}]);